basePath: /
definitions:
  system.Button:
    properties:
      code:
        type: string
      desc:
        type: string
      id:
        type: integer
    type: object
  system.Menu:
    properties:
      activeMenu:
        description: 激活的菜单名
        type: string
      buttons:
        items:
          $ref: '#/definitions/system.Button'
        type: array
      children:
        items:
          $ref: '#/definitions/system.Menu'
        type: array
      component:
        type: string
      constant:
        type: boolean
      createdAt:
        type: string
      deletedAt:
        type: string
      fixedIndexInTab:
        type: integer
      hideInMenu:
        description: 是否隐藏菜单
        type: boolean
      href:
        type: string
      i18nKey:
        type: string
      icon:
        type: string
      iconType:
        type: string
      id:
        type: integer
      keepAlive:
        type: boolean
      localIcon:
        type: string
      menuName:
        type: string
      menuType:
        type: string
      multiTab:
        description: 是否支持多标签
        type: boolean
      order:
        type: integer
      parentId:
        description: 父菜单ID
        type: integer
      query:
        items:
          $ref: '#/definitions/system.MenuQuery'
        type: array
      routeName:
        type: string
      routePath:
        type: string
      status:
        type: string
      updatedAt:
        type: string
    type: object
  system.MenuQuery:
    properties:
      id:
        type: integer
      key:
        type: string
      menuId:
        type: integer
      value:
        type: string
    type: object
  system.Role:
    properties:
      buttons:
        items:
          $ref: '#/definitions/system.Button'
        type: array
      createTime:
        type: string
      deleteTime:
        type: string
      id:
        type: integer
      menu:
        items:
          $ref: '#/definitions/system.Menu'
        type: array
      roleDesc:
        type: string
      roleName:
        type: string
      updateTime:
        type: string
    required:
    - roleName
    type: object
  system.Token:
    properties:
      refreshToken:
        type: string
      token:
        type: string
    type: object
  system.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      password:
        type: string
      roles:
        items:
          $ref: '#/definitions/system.Role'
        type: array
      updatedAt:
        type: string
      userName:
        type: string
    type: object
  system.UserDTO:
    properties:
      buttons:
        items:
          type: string
        type: array
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      roles:
        items:
          type: string
        type: array
      updatedAt:
        type: string
      userName:
        type: string
    type: object
  utils.ExistsResult:
    properties:
      exists:
        type: boolean
    type: object
  utils.Pagination-array_system_Role:
    properties:
      current:
        type: integer
      records:
        items:
          items:
            $ref: '#/definitions/system.Role'
          type: array
        type: array
      size:
        type: integer
      total:
        type: integer
    type: object
  utils.Pagination-array_system_User:
    properties:
      current:
        type: integer
      records:
        items:
          items:
            $ref: '#/definitions/system.User'
          type: array
        type: array
      size:
        type: integer
      total:
        type: integer
    type: object
  utils.Response-array_system_Button:
    properties:
      code:
        type: string
      data:
        items:
          $ref: '#/definitions/system.Button'
        type: array
      msg:
        type: string
    type: object
  utils.Response-array_system_Menu:
    properties:
      code:
        type: string
      data:
        items:
          $ref: '#/definitions/system.Menu'
        type: array
      msg:
        type: string
    type: object
  utils.Response-array_system_Role:
    properties:
      code:
        type: string
      data:
        items:
          $ref: '#/definitions/system.Role'
        type: array
      msg:
        type: string
    type: object
  utils.Response-string:
    properties:
      code:
        type: string
      data:
        type: string
      msg:
        type: string
    type: object
  utils.Response-system_Button:
    properties:
      code:
        type: string
      data:
        $ref: '#/definitions/system.Button'
      msg:
        type: string
    type: object
  utils.Response-system_Role:
    properties:
      code:
        type: string
      data:
        $ref: '#/definitions/system.Role'
      msg:
        type: string
    type: object
  utils.Response-system_Token:
    properties:
      code:
        type: string
      data:
        $ref: '#/definitions/system.Token'
      msg:
        type: string
    type: object
  utils.Response-system_User:
    properties:
      code:
        type: string
      data:
        $ref: '#/definitions/system.User'
      msg:
        type: string
    type: object
  utils.Response-system_UserDTO:
    properties:
      code:
        type: string
      data:
        $ref: '#/definitions/system.UserDTO'
      msg:
        type: string
    type: object
  utils.Response-utils_ExistsResult:
    properties:
      code:
        type: string
      data:
        $ref: '#/definitions/utils.ExistsResult'
      msg:
        type: string
    type: object
  utils.Response-utils_Pagination-array_system_Role:
    properties:
      code:
        type: string
      data:
        $ref: '#/definitions/utils.Pagination-array_system_Role'
      msg:
        type: string
    type: object
  utils.Response-utils_Pagination-array_system_User:
    properties:
      code:
        type: string
      data:
        $ref: '#/definitions/utils.Pagination-array_system_User'
      msg:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Soybean Admin Go 后台管理系统 API 文档
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Soybean Admin Go API
  version: "1.0"
paths:
  /auth/getUserInfo:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的详细信息
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-system_UserDTO'
        "401":
          description: 认证失败
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - 认证
  /auth/login:
    post:
      consumes:
      - application/json
      description: 用户登录接口，获取token
      parameters:
      - description: 登录信息
        in: body
        name: user
        required: true
        schema:
          properties:
            password:
              type: string
            userName:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-system_Token'
        "401":
          description: 认证失败
          schema:
            $ref: '#/definitions/utils.Response-string'
      summary: 用户登录
      tags:
      - 认证
  /auth/refreshToken:
    post:
      consumes:
      - application/json
      description: 使用刷新令牌获取新的访问令牌
      parameters:
      - description: 刷新令牌
        in: body
        name: refreshInfo
        required: true
        schema:
          properties:
            refreshToken:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-system_Token'
        "401":
          description: 认证失败
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 刷新Token
      tags:
      - 认证
  /buttons:
    get:
      consumes:
      - application/json
      description: 获取系统所有按钮列表
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-array_system_Button'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 获取所有按钮
      tags:
      - 按钮管理
    post:
      consumes:
      - application/json
      description: 创建新的按钮
      parameters:
      - description: 按钮信息
        in: body
        name: button
        required: true
        schema:
          $ref: '#/definitions/system.Button'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-system_Button'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 创建按钮
      tags:
      - 按钮管理
  /buttons/batchDelete:
    post:
      consumes:
      - application/json
      description: 批量删除多个按钮
      parameters:
      - description: 按钮ID列表
        in: body
        name: ids
        required: true
        schema:
          properties:
            ids:
              items:
                type: integer
              type: array
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-string'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 批量删除按钮
      tags:
      - 按钮管理
  /buttons/delete:
    post:
      consumes:
      - application/json
      description: 删除指定按钮
      parameters:
      - description: 按钮ID
        in: body
        name: id
        required: true
        schema:
          properties:
            id:
              type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-string'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 删除按钮
      tags:
      - 按钮管理
  /buttons/role:
    get:
      consumes:
      - application/json
      description: 获取指定角色的按钮列表
      parameters:
      - description: 角色ID
        in: query
        name: roleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-array_system_Button'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 获取角色按钮
      tags:
      - 按钮管理
  /buttons/update:
    post:
      consumes:
      - application/json
      description: 更新按钮信息
      parameters:
      - description: 按钮信息
        in: body
        name: button
        required: true
        schema:
          $ref: '#/definitions/system.Button'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-string'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 更新按钮
      tags:
      - 按钮管理
  /buttons/user:
    get:
      consumes:
      - application/json
      description: 获取当前用户的按钮权限
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-array_system_Button'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 获取用户按钮
      tags:
      - 按钮管理
  /menus:
    get:
      consumes:
      - application/json
      description: 获取系统所有菜单列表
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-array_system_Menu'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 获取所有菜单
      tags:
      - 菜单管理
    post:
      consumes:
      - application/json
      description: 创建新菜单
      parameters:
      - description: 菜单信息
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/system.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-array_system_Menu'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 创建菜单
      tags:
      - 菜单管理
  /menus/batchDelete:
    post:
      consumes:
      - application/json
      description: 批量删除多个菜单
      parameters:
      - description: 菜单ID列表
        in: body
        name: ids
        required: true
        schema:
          properties:
            ids:
              items:
                type: integer
              type: array
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-string'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 批量删除菜单
      tags:
      - 菜单管理
  /menus/delete:
    post:
      consumes:
      - application/json
      description: 删除指定菜单
      parameters:
      - description: 菜单ID
        in: body
        name: id
        required: true
        schema:
          properties:
            id:
              type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-string'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 删除菜单
      tags:
      - 菜单管理
  /menus/role:
    get:
      consumes:
      - application/json
      description: 获取指定角色的菜单列表
      parameters:
      - description: 角色ID
        in: query
        name: roleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-array_system_Menu'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 获取角色菜单
      tags:
      - 菜单管理
  /menus/update:
    post:
      consumes:
      - application/json
      description: 更新菜单信息
      parameters:
      - description: 菜单信息
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/system.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-array_system_Menu'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 更新菜单
      tags:
      - 菜单管理
  /menus/user:
    get:
      consumes:
      - application/json
      description: 获取当前用户的菜单列表
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-array_system_Menu'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 获取用户菜单
      tags:
      - 菜单管理
  /roles:
    get:
      consumes:
      - application/json
      description: 获取分页的角色列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页条数
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-utils_Pagination-array_system_Role'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 获取分页角色列表
      tags:
      - 角色管理
    post:
      consumes:
      - application/json
      description: 创建新角色
      parameters:
      - description: 角色信息
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/system.Role'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-system_Role'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 创建角色
      tags:
      - 角色管理
  /roles/all:
    get:
      consumes:
      - application/json
      description: 获取所有角色列表（不分页）
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-array_system_Role'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 获取所有角色
      tags:
      - 角色管理
  /roles/batchDelete:
    post:
      consumes:
      - application/json
      description: 批量删除多个角色
      parameters:
      - description: 角色ID列表
        in: body
        name: ids
        required: true
        schema:
          properties:
            ids:
              items:
                type: integer
              type: array
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-string'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 批量删除角色
      tags:
      - 角色管理
  /roles/buttons:
    post:
      consumes:
      - application/json
      description: 更新角色的按钮权限
      parameters:
      - description: 角色按钮信息
        in: body
        name: buttonInfo
        required: true
        schema:
          properties:
            buttonIds:
              items:
                type: integer
              type: array
            roleId:
              type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-string'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 更新角色按钮权限
      tags:
      - 角色管理
  /roles/delete:
    post:
      consumes:
      - application/json
      description: 删除指定角色
      parameters:
      - description: 角色ID
        in: body
        name: id
        required: true
        schema:
          properties:
            id:
              type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-string'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 删除角色
      tags:
      - 角色管理
  /roles/menus:
    post:
      consumes:
      - application/json
      description: 更新角色的菜单权限
      parameters:
      - description: 角色菜单信息
        in: body
        name: menuInfo
        required: true
        schema:
          properties:
            menuIds:
              items:
                type: integer
              type: array
            roleId:
              type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-string'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 更新角色菜单
      tags:
      - 角色管理
  /roles/update:
    post:
      consumes:
      - application/json
      description: 更新角色信息
      parameters:
      - description: 角色信息
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/system.Role'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-string'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 更新角色
      tags:
      - 角色管理
  /users:
    get:
      consumes:
      - application/json
      description: 获取分页的用户列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页条数
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-utils_Pagination-array_system_User'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 获取用户列表
      tags:
      - 用户管理
    post:
      consumes:
      - application/json
      description: 创建新用户
      parameters:
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/system.User'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-system_User'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 创建用户
      tags:
      - 用户管理
  /users/batchDelete:
    post:
      consumes:
      - application/json
      description: 批量删除多个用户
      parameters:
      - description: 用户ID列表
        in: body
        name: ids
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-string'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 批量删除用户
      tags:
      - 用户管理
  /users/checkUsername:
    get:
      consumes:
      - application/json
      description: 检查用户名是否已被使用
      parameters:
      - description: 用户名
        in: query
        name: userName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-utils_ExistsResult'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 检查用户名是否存在
      tags:
      - 用户管理
  /users/delete:
    post:
      consumes:
      - application/json
      description: 删除指定用户
      parameters:
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/system.User'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-string'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - 用户管理
  /users/password:
    post:
      consumes:
      - application/json
      description: 更新用户密码
      parameters:
      - description: 密码信息
        in: body
        name: passwordInfo
        required: true
        schema:
          properties:
            id:
              type: integer
            password:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-string'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 更新用户密码
      tags:
      - 用户管理
  /users/roles:
    get:
      consumes:
      - application/json
      description: 获取指定用户的角色列表
      parameters:
      - description: 用户ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-array_system_Role'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 获取用户角色
      tags:
      - 用户管理
    post:
      consumes:
      - application/json
      description: 更新用户的角色列表
      parameters:
      - description: 用户角色信息
        in: body
        name: roleInfo
        required: true
        schema:
          properties:
            id:
              type: integer
            roleIds:
              items:
                type: integer
              type: array
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/utils.Response-string'
        "400":
          description: 错误
          schema:
            $ref: '#/definitions/utils.Response-string'
      security:
      - ApiKeyAuth: []
      summary: 更新用户角色
      tags:
      - 用户管理
securityDefinitions:
  ApiKeyAuth:
    description: '请在此处输入Bearer Token，格式为: Bearer {token}'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
